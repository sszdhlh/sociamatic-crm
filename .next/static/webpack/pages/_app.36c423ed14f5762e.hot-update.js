"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./services/api/apiClient.ts":
/*!***********************************!*\
  !*** ./services/api/apiClient.ts ***!
  \***********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"./node_modules/axios/index.js\");\n\n// API base configuration - Default to local mock API path\nconst API_BASE_URL = \"http://localhost:3001/api/v1\" || 0;\n// Debug API configuration\nconsole.log(\"API Client initialized with base URL:\", API_BASE_URL);\n// Create axios instance\nconst apiClient = axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].create({\n    baseURL: API_BASE_URL,\n    headers: {\n        \"Content-Type\": \"application/json\"\n    },\n    // For development, try without credentials first if we have CORS issues\n    withCredentials: false,\n    // Add timeout to prevent long hanging requests\n    timeout: 10000\n});\n// Request interceptor\napiClient.interceptors.request.use((config)=>{\n    var _config_method;\n    // Get stored token\n    const token = localStorage.getItem(\"accessToken\");\n    // If token exists, add to request headers\n    if (token) {\n        config.headers.Authorization = \"Bearer \".concat(token);\n    }\n    // Debug info for development\n    console.log(\"API Request: \".concat((_config_method = config.method) === null || _config_method === void 0 ? void 0 : _config_method.toUpperCase(), \" \").concat(config.url), {\n        headers: config.headers,\n        withCredentials: config.withCredentials\n    });\n    return config;\n}, (error)=>{\n    console.error(\"API Request Error:\", error);\n    return Promise.reject(error);\n});\n// Response interceptor\napiClient.interceptors.response.use((response)=>{\n    var _response_config_method;\n    console.log(\"API Response Success: \".concat((_response_config_method = response.config.method) === null || _response_config_method === void 0 ? void 0 : _response_config_method.toUpperCase(), \" \").concat(response.config.url), {\n        status: response.status,\n        statusText: response.statusText\n    });\n    return response;\n}, async (error)=>{\n    var _error_response, _error_response1, _error_response2, _error_response3;\n    const originalRequest = error.config;\n    // Log detailed error info\n    console.error(\"API Response Error:\", {\n        url: originalRequest === null || originalRequest === void 0 ? void 0 : originalRequest.url,\n        method: originalRequest === null || originalRequest === void 0 ? void 0 : originalRequest.method,\n        status: (_error_response = error.response) === null || _error_response === void 0 ? void 0 : _error_response.status,\n        statusText: (_error_response1 = error.response) === null || _error_response1 === void 0 ? void 0 : _error_response1.statusText,\n        data: (_error_response2 = error.response) === null || _error_response2 === void 0 ? void 0 : _error_response2.data,\n        message: error.message\n    });\n    // Handle 401 errors (unauthorized), try to refresh token\n    if (((_error_response3 = error.response) === null || _error_response3 === void 0 ? void 0 : _error_response3.status) === 401 && !originalRequest._retry) {\n        originalRequest._retry = true;\n        try {\n            // Try to refresh token\n            const refreshToken = localStorage.getItem(\"refreshToken\");\n            if (refreshToken) {\n                console.log(\"Attempting to refresh token...\");\n                const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].post(\"\".concat(API_BASE_URL, \"/auth/refresh-token\"), {\n                    refreshToken\n                });\n                const { accessToken } = response.data;\n                // Save new access token\n                localStorage.setItem(\"accessToken\", accessToken);\n                // Update Authorization header for failed request\n                originalRequest.headers.Authorization = \"Bearer \".concat(accessToken);\n                console.log(\"Token refreshed successfully, retrying request\");\n                // Resend failed request\n                return apiClient(originalRequest);\n            }\n        } catch (refreshError) {\n            console.error(\"Failed to refresh token:\", refreshError);\n            // Refresh token failed, clear local storage and redirect to login\n            localStorage.removeItem(\"accessToken\");\n            localStorage.removeItem(\"refreshToken\");\n            localStorage.removeItem(\"user\");\n            // Redirect in browser environment\n            if (true) {\n                console.log(\"Redirecting to login page due to auth failure\");\n                window.location.href = \"/login\";\n            }\n        }\n    }\n    // Transform network errors to be more informative\n    if (error.message === \"Network Error\") {\n        console.error(\"Network error detected - API server may be down or unreachable\");\n        const enhancedError = new Error(\"Unable to connect to server. Please check your internet connection or try again later.\");\n        return Promise.reject(enhancedError);\n    }\n    return Promise.reject(error);\n});\n/* harmony default export */ __webpack_exports__[\"default\"] = (apiClient);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./services/api/apiClient.ts\n"));

/***/ })

});